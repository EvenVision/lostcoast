// custom variables and override bootstrap variables
$white: #fff;
$black: #000;
//$boulder: #555;
$boulder: #555;
$blue-chill: #157279;
$scorpion: #575757;
$keppel: #44a4aa;
$dove-gray: #737373;

$body-bg: $white;
$font-size-base: 16px;
$font-family-base: 'IntroCondRegularAlt', Arial, Helvetica, sans-serif;
$navbar-height: 0;
$navbar-margin-bottom: 0;
$modal-backdrop-bg: #00484d;
$modal-backdrop-opacity: .52;

//** Deprecated `$screen-xs` as of v3.0.1
$screen-xs:                  480px;
//** Deprecated `$screen-xs-min` as of v3.2.0
$screen-xs-min:              $screen-xs;
//** Deprecated `$screen-phone` as of v3.0.1
$screen-phone:               $screen-xs-min;

// Small screen / tablet
//** Deprecated `$screen-sm` as of v3.0.1
$screen-sm:                  768px;
$screen-sm-min:              $screen-sm;
//** Deprecated `$screen-tablet` as of v3.0.1
$screen-tablet:              $screen-sm-min;

// Medium screen / desktop
//** Deprecated `$screen-md` as of v3.0.1
$screen-md:                  992px;
$screen-md-min:              $screen-md;
//** Deprecated `$screen-desktop` as of v3.0.1
$screen-desktop:             $screen-md-min;

// Large screen / wide desktop
//** Deprecated `$screen-lg` as of v3.0.1
$screen-lg:                  1300px;
$screen-lg-min:              $screen-lg;
//** Deprecated `$screen-lg-desktop` as of v3.0.1
$screen-lg-desktop:          $screen-lg-min;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1);
$screen-sm-max:              ($screen-md-min - 1);
$screen-md-max:              ($screen-lg-min - 1);


//== Grid system
//
//## Define your custom responsive grid.

//** Number of columns in the grid.
$grid-columns:              12;
//** Padding between columns. Gets divided in half for the left and right.
$grid-gutter-width:         22px;
// Navbar collapse
//** Point at which the navbar becomes uncollapsed.
$grid-float-breakpoint:     $screen-sm-min;
//** Point at which the navbar begins collapsing.
$grid-float-breakpoint-max: ($grid-float-breakpoint - 1);


//== Container sizes
//
//## Define the maximum width of `.container` for different screen sizes.

// Small screen / tablet
$container-tablet:             (720px + $grid-gutter-width);
//** For `$screen-sm-min` and up.
$container-sm:                 $container-tablet;

// Medium screen / desktop
$container-desktop:            (940px + $grid-gutter-width);
//** For `$screen-md-min` and up.
$container-md:                 $container-desktop;

// Large screen / wide desktop
$container-large-desktop:      (1064px + $grid-gutter-width);
//** For `$screen-lg-min` and up.
$container-lg:                 $container-large-desktop;


$breakpoints: (
  'xs-phone': 320px,
  'phone': $screen-xs,
  'tablet': $screen-sm,
  'desktop': $screen-md,
  'widescreen': $screen-lg
);

@mixin transform($transform){
  -webkit-transform: $transform;
  -ms-transform: $transform; // IE9 only
  -o-transform: $transform;
  transform: $transform;
}

@mixin translate-rotate($x, $y, $degrees) {
  -webkit-transform: translate($x, $y) rotate($degrees);
  -ms-transform: translate($x, $y) rotate($degrees); // IE9 only
  -o-transform: translate($x, $y) rotate($degrees);
  transform: translate($x, $y) rotate($degrees);
}

@mixin rotate-translate($x, $y, $degrees) {
  -webkit-transform: rotate($degrees) translate($x, $y);
  -ms-transform: rotate($degrees) translate($x, $y); // IE9 only
  -o-transform: rotate($degrees) translate($x, $y);
  transform: rotate($degrees) translate($x, $y);
}

@mixin rotate-translateX($degrees, $x) {
  -webkit-transform: rotate($degrees) translateX($x);
  -ms-transform: rotate($degrees) translateX($x); // IE9 only
  -o-transform: rotate($degrees) translateX($x);
  transform: rotate($degrees) translateX($x);
}